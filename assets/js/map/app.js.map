{"version":3,"sources":["current_page.js","hover.js","pagination_button.js"],"names":["_location$pathname$sp","location","pathname","split","filter","val","_location$pathname$sp2","_slicedToArray","section","category","currentSection","getCurrentSection","classList","add","currentCategory","getCurrentCategory","document","querySelector","concat","closest","sectionSelected","categoryTop","currentNav","elements","querySelectorAll","elem","addEventListener","remove","_iterator","s","_step","n","done","_loop","button"],"mappings":"iqCAIA,IAAAA,sBACEC,SAASC,SAASC,MAAM,KAAKC,OAAO,SAACC,GAAD,OAASA,IAD/CC,uBAAAC,eAAAP,sBAAA,GAAOQ,QAAPF,uBAAA,GAAgBG,SAAhBH,uBAAA,GAIMI,eAAiBC,kBAAkBH,SACrCE,gBAAgBA,eAAeE,UAAUC,IAAI,mBAGjD,IAAMC,gBAAkBC,mBAAmBP,QAASC,UAGpD,SAASE,kBAAkBH,GACnBE,EAAiBM,SAASC,cAAT,gCAAAC,OACWV,EADX,MAEvB,OAAOE,EAAiBA,EAAeS,QAAQ,MAAQ,KAGzD,SAASJ,mBAAmBP,EAASC,GAC7BW,EAAe,+BAAAF,OACYV,EADZ,cAAAU,OACgCT,EADhC,MAEfY,EAAW,8BAAAH,OACeV,EADf,KAGXc,EAAaN,SAASC,cAAcG,GAC1C,OAAOE,MAAAA,EAAAA,EAAcN,SAASC,cAAcI,G,soCAf1CP,iBAAiBA,gBAAgBF,UAAUC,IAAI,mBCRnD,I,MAAMU,SAAWP,SAASQ,iBAAiB,a,qCACxBD,U,6BAARE,E,YAETA,EAAKC,iBAAiB,aAAc,WAClCD,EAAKb,UAAUC,IAAI,WAErBY,EAAKC,iBAAiB,aAAc,WAClCD,EAAKb,UAAUe,OAAO,WAGxBF,EAAKC,iBAAiB,aAAc,WAClCD,EAAKb,UAAUC,IAAI,WAErBY,EAAKC,iBAAiB,WAAY,WAChCD,EAAKb,UAAUe,OAAO,YAb1B,IAAAC,UAAAC,MAAAC,MAAAF,UAAAG,KAAAC,MAA6BC,Q,8CCN7B,IAAMC,OAASlB,SAASC,cAAc,wBACtCiB,OAAOR,iBAAiB,QAAS","file":"app.js","sourcesContent":["// グローバルメニューとブログのカテゴリーメニューの中で、\n// 現在のページに該当する要素に\"js-current_page\"クラスを追加する\n\n// ex. section = \"blog\", category = \"travel\"\nconst [section, category] =\n  location.pathname.split(\"/\").filter((val) => val);\n\n// グローバルナビの該当要素にクラスを追加\nconst currentSection = getCurrentSection(section);\nif (currentSection) currentSection.classList.add(\"js-current_page\");\n\n// セクションの該当するカテゴリーにクラスを追加\nconst currentCategory = getCurrentCategory(section, category);\nif (currentCategory) currentCategory.classList.add(\"js-current_page\");\n\nfunction getCurrentSection(section) {\n  const currentSection = document.querySelector(\n    `.l-header-global_nav a[href*=${section}]`);\n  return currentSection ? currentSection.closest(\"li\") : null;\n}\n\nfunction getCurrentCategory(section, category) {\n  const sectionSelected =\n    `.c-category_menu > a[href*=\"${section}\"][href*=\"${category}\"]`;\n  const categoryTop =\n    `.c-category_menu > a[href*=${section}]`;\n  // TODO: 下2行をまとめたいが、querySelectorのor条件がうまくいかない。\n  const currentNav = document.querySelector(sectionSelected);\n  return currentNav ?? document.querySelector(categoryTop);\n};\n","// <使い方>\n// HTMLのclassに\"js-hover\"を追加。\n// CSSで特定クラスに続けた\".hover\"でスタイルを指定。\n// <p class=\"p js-hover\"></p>の場合、\".p.hover{スタイル}\"\n\nconst elements = document.querySelectorAll(\".js-hover\");\nfor (const elem of elements) {\n  // マウスが要素の範囲内にある時のみhoverクラスを追加\n  elem.addEventListener(\"mouseenter\", () => {\n    elem.classList.add(\"hover\");\n  });\n  elem.addEventListener(\"mouseleave\", () => {\n    elem.classList.remove(\"hover\");\n  });\n  // タッチデバイス対応\n  elem.addEventListener(\"touchstart\", () => {\n    elem.classList.add(\"hover\");\n  });\n  elem.addEventListener(\"touchend\", () => {\n    elem.classList.remove(\"hover\");\n  });\n}\n","const button = document.querySelector(\".page_numbers-button\");\nbutton.addEventListener(\"click\", () => {\n\n});\n"]}